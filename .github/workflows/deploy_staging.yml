on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Test project
        run: npm test

      - name: Upload build artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: deployment-files
          path: ./dist

  deploy_staging:
    name: deploy to staging environment
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate SSH keys
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >> ~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
      - name: Get deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-files
          path: ./dist
      - name: Deploy to staging
        run: |
          rsync --recursive --verbose --archive --compress --delay-updates --delete-after --recursive \
             ./dist/ ${{ secrets.STAGING_SSH_USER }}@staging:/home/${{ secrets.STAGING_SSH_USER }}/test.smacdo.com/